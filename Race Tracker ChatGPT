<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Race Tracker</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    .container {
      display: flex;
      justify-content: space-between;
    }
    .stopwatch, .results {
      flex: 1;
    }
    .timestamps {
      flex: 1;
      margin-left: 20px;
    }
    .timestamp-entry {
      display: flex;
      align-items: center;
      margin-bottom: 10px;
    }
    .timestamp-entry input {
      margin-left: 10px;
    }
    #resultsScreen {
      display: none;
    }
  </style>
</head>
<body>
  <h1>Race Tracker</h1>
  <div id="mainScreen" class="container">
    <div class="stopwatch">
      <div id="display">00:00:00.000</div>
      <button id="startStopBtn">Start</button>
      <button id="resetBtn">Reset</button>
      <button id="saveBtn">Save Timestamp</button>
      <button id="endRaceBtn">End Race</button>
    </div>
    <div class="timestamps">
      <h2>Timestamps</h2>
      <div id="timestampList"></div>
    </div>
  </div>

  <div id="resultsScreen">
    <h2>Race Results</h2>
    <div id="resultsList"></div>
    <button id="downloadResultsBtn">Download CSV</button>
    <button id="resetRaceBtn">Reset Race</button>
  </div>

  <script>
    let isRunning = false;
    let startTime = 0;
    let elapsedTime = 0;
    let intervalId;
    const timestamps = [];

    const display = document.getElementById('display');
    const startStopBtn = document.getElementById('startStopBtn');
    const resetBtn = document.getElementById('resetBtn');
    const saveBtn = document.getElementById('saveBtn');
    const endRaceBtn = document.getElementById('endRaceBtn');
    const downloadResultsBtn = document.getElementById('downloadResultsBtn');
    const resetRaceBtn = document.getElementById('resetRaceBtn');
    const timestampList = document.getElementById('timestampList');
    const mainScreen = document.getElementById('mainScreen');
    const resultsScreen = document.getElementById('resultsScreen');
    const resultsList = document.getElementById('resultsList');

    function formatTime(ms) {
      const totalSeconds = Math.floor(ms / 1000);
      const hours = String(Math.floor(totalSeconds / 3600)).padStart(2, '0');
      const minutes = String(Math.floor((totalSeconds % 3600) / 60)).padStart(2, '0');
      const seconds = String(totalSeconds % 60).padStart(2, '0');
      const milliseconds = String(ms % 1000).padStart(3, '0');
      return `${hours}:${minutes}:${seconds}.${milliseconds}`;
    }

    function updateDisplay() {
      const now = Date.now();
      elapsedTime = now - startTime;
      display.textContent = formatTime(elapsedTime);
    }

    startStopBtn.addEventListener('click', () => {
      if (isRunning) {
        clearInterval(intervalId);
        elapsedTime += Date.now() - startTime;
        startStopBtn.textContent = 'Start';
      } else {
        startTime = Date.now() - elapsedTime;
        intervalId = setInterval(updateDisplay, 10); // Update every 10ms
        startStopBtn.textContent = 'Stop';
      }
      isRunning = !isRunning;
    });

    resetBtn.addEventListener('click', () => {
      clearInterval(intervalId);
      isRunning = false;
      startTime = 0;
      elapsedTime = 0;
      display.textContent = '00:00:00.000';
      startStopBtn.textContent = 'Start';
    });

    saveBtn.addEventListener('click', () => {
      const timestamp = formatTime(elapsedTime);
      const timestampEntry = document.createElement('div');
      timestampEntry.className = 'timestamp-entry';
      timestampEntry.innerHTML = `
        <span>${timestamp}</span>
        <input type="text" placeholder="Enter name">
      `;
      const input = timestampEntry.querySelector('input');
      timestamps.push({ timestamp, name: '', place: '' });

      input.addEventListener('input', (e) => {
        const index = Array.from(timestampList.children).indexOf(timestampEntry);
        timestamps[index].name = e.target.value;
      });

      timestampList.appendChild(timestampEntry);
    });

    endRaceBtn.addEventListener('click', () => {
      // Sort timestamps by time
      const sortedTimestamps = timestamps.slice().sort((a, b) => a.timestamp.localeCompare(b.timestamp));

      // Assign places
      sortedTimestamps.forEach((t, index) => {
        if (index === 0) t.place = '1st';
        else if (index === 1) t.place = '2nd';
        else if (index === 2) t.place = '3rd';
      });

      // Display results
      resultsList.innerHTML = sortedTimestamps
        .map((t, index) => `${t.place || ''} - ${t.name || 'N/A'} (${t.timestamp})`)
        .join('<br>');
      
      // Show results screen
      mainScreen.style.display = 'none';
      resultsScreen.style.display = 'block';
    });

    downloadResultsBtn.addEventListener('click', () => {
      const csvContent = 'data:text/csv;charset=utf-8,' + 
        'Place,Name,Timestamp\n' + 
        timestamps.map(t => `${t.place},${t.name},${t.timestamp}`).join('\n');
      const encodedUri = encodeURI(csvContent);
      const link = document.createElement('a');
      link.setAttribute('href', encodedUri);
      link.setAttribute('download', 'race_results.csv');
      document.body.appendChild(link); // Required for Firefox
      link.click();
      document.body.removeChild(link);
    });

    resetRaceBtn.addEventListener('click', () => {
      timestamps.length = 0;
      timestampList.innerHTML = '';
      resultsList.innerHTML = '';
      mainScreen.style.display = 'flex';
      resultsScreen.style.display = 'none';
      resetBtn.click();
    });
  </script>
</body>
</html>
